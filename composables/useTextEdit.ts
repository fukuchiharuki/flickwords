export default function useTextEdit() {
  const transformingMap = {
    か: { 小: 'が', '゛': 'が', '゜': 'が' },
    き: { 小: 'ぎ', '゛': 'ぎ', '゜': 'ぎ' },
    く: { 小: 'ぐ', '゛': 'ぐ', '゜': 'ぐ' },
    け: { 小: 'げ', '゛': 'げ', '゜': 'げ' },
    こ: { 小: 'ご', '゛': 'ご', '゜': 'ご' },
    さ: { 小: 'ざ', '゛': 'ざ', '゜': 'ざ' },
    し: { 小: 'じ', '゛': 'じ', '゜': 'じ' },
    す: { 小: 'ず', '゛': 'ず', '゜': 'ず' },
    せ: { 小: 'ぜ', '゛': 'ぜ', '゜': 'ぜ' },
    そ: { 小: 'ぞ', '゛': 'ぞ', '゜': 'ぞ' },
    た: { 小: 'だ', '゛': 'だ', '゜': 'だ' },
    ち: { 小: 'ぢ', '゛': 'ぢ', '゜': 'ぢ' },
    つ: { 小: 'づ', '゛': 'づ', '゜': 'づ' },
    て: { 小: 'で', '゛': 'で', '゜': 'で' },
    と: { 小: 'ど', '゛': 'ど', '゜': 'ど' },
    は: { 小: 'ば', '゛': 'ば', '゜': 'ぱ' },
    ひ: { 小: 'び', '゛': 'び', '゜': 'ぴ' },
    ふ: { 小: 'ぶ', '゛': 'ぶ', '゜': 'ぷ' },
    へ: { 小: 'べ', '゛': 'べ', '゜': 'ぺ' },
    ほ: { 小: 'ぼ', '゛': 'ぼ', '゜': 'ぽ' },
    が: { 小: 'か', '゛': 'か', '゜': 'か' },
    ぎ: { 小: 'き', '゛': 'き', '゜': 'き' },
    ぐ: { 小: 'く', '゛': 'く', '゜': 'く' },
    げ: { 小: 'け', '゛': 'け', '゜': 'け' },
    ご: { 小: 'こ', '゛': 'こ', '゜': 'こ' },
    ざ: { 小: 'さ', '゛': 'さ', '゜': 'さ' },
    じ: { 小: 'し', '゛': 'し', '゜': 'し' },
    ず: { 小: 'す', '゛': 'す', '゜': 'す' },
    ぜ: { 小: 'せ', '゛': 'せ', '゜': 'せ' },
    ぞ: { 小: 'そ', '゛': 'そ', '゜': 'そ' },
    だ: { 小: 'た', '゛': 'た', '゜': 'た' },
    ぢ: { 小: 'ち', '゛': 'ち', '゜': 'ち' },
    づ: { 小: 'つ', '゛': 'つ', '゜': 'つ' },
    で: { 小: 'て', '゛': 'て', '゜': 'て' },
    ど: { 小: 'と', '゛': 'と', '゜': 'と' },
    ば: { 小: 'は', '゛': 'は', '゜': 'ぱ' },
    び: { 小: 'ひ', '゛': 'ひ', '゜': 'ぴ' },
    ぶ: { 小: 'ふ', '゛': 'ふ', '゜': 'ぷ' },
    べ: { 小: 'へ', '゛': 'へ', '゜': 'ぺ' },
    ぼ: { 小: 'ほ', '゛': 'ほ', '゜': 'ぽ' },
    ぱ: { 小: 'は', '゛': 'ば', '゜': 'は' },
    ぴ: { 小: 'ひ', '゛': 'び', '゜': 'ひ' },
    ぷ: { 小: 'ふ', '゛': 'ぶ', '゜': 'ふ' },
    ぺ: { 小: 'へ', '゛': 'べ', '゜': 'へ' },
    ぽ: { 小: 'ほ', '゛': 'ぼ', '゜': 'ほ' },
    や: { 小: 'ゃ', '゛': 'ゃ', '゜': 'ゃ' },
    ゆ: { 小: 'ゅ', '゛': 'ゅ', '゜': 'ゅ' },
    よ: { 小: 'ょ', '゛': 'ょ', '゜': 'ょ' },
    ゃ: { 小: 'や', '゛': 'や', '゜': 'や' },
    ゅ: { 小: 'ゆ', '゛': 'ゆ', '゜': 'ゆ' },
    ょ: { 小: 'よ', '゛': 'よ', '゜': 'よ' },
    あ: { 小: 'ぁ', '゛': 'ぁ', '゜': 'ぁ' },
    い: { 小: 'ぃ', '゛': 'ぃ', '゜': 'ぃ' },
    う: { 小: 'ぅ', '゛': 'ゔ', '゜': 'ぅ' },
    え: { 小: 'ぇ', '゛': 'ぇ', '゜': 'ぇ' },
    お: { 小: 'ぉ', '゛': 'ぉ', '゜': 'ぉ' },
    ぁ: { 小: 'あ', '゛': 'あ', '゜': 'あ' },
    ぃ: { 小: 'い', '゛': 'い', '゜': 'い' },
    ぅ: { 小: 'う', '゛': 'う', '゜': 'う' },
    ぇ: { 小: 'え', '゛': 'え', '゜': 'え' },
    ぉ: { 小: 'お', '゛': 'お', '゜': 'お' },
    ゔ: { 小: 'う', '゛': 'う', '゜': 'う' }
  } as { [key: string]: { [key: string]: string } }

  const text = ref('')

  return {
    text,
    input,
    backspace,
    newline
  }

  function input(value: string) {
    if (!['小', '゛', '゜'].includes(value)) {
      text.value = text.value + value
    } else {
      if (text.value.length === 0) return
      const lastChar = text.value.slice(-1)
      text.value = text.value.slice(0, -1) + transform(lastChar, value)
    }
  }

  function backspace() {
    if (text.value.length !== 0) text.value = text.value.slice(0, -1)
  }

  function newline() {
    text.value = text.value + '\n'
  }

  function transform(char: string, input: string): string {
    return (transformingMap[char] || {})[input] || char
  }
}
